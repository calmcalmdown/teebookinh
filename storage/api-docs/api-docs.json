{
    "openapi": "3.0.0",
    "info": {
        "title": "Teehive API Documentation",
        "description": "L5 Swagger OpenApi description",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "API Server"
        }
    ],
    "paths": {
        "/credits": {
            "get": {
                "tags": [
                    "Credits"
                ],
                "summary": "Get credits of current user",
                "operationId": "App\\Http\\Controllers\\Api\\CreditController::getCredits",
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/add-credits": {
            "put": {
                "tags": [
                    "Credits"
                ],
                "summary": "Add credits of current user",
                "operationId": "App\\Http\\Controllers\\Api\\CreditController::addCredits",
                "requestBody": {
                    "description": "Pass number of credits",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "credits"
                                ],
                                "properties": {
                                    "credits": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/deduct-credits": {
            "put": {
                "tags": [
                    "Credits"
                ],
                "summary": "Deduct credits of current user",
                "operationId": "App\\Http\\Controllers\\Api\\CreditController::deductCredits",
                "requestBody": {
                    "description": "Pass number of credits",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "credits"
                                ],
                                "properties": {
                                    "credits": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/courses": {
            "get": {
                "tags": [
                    "Course"
                ],
                "summary": "Get list of courses",
                "operationId": "App\\Http\\Controllers\\Api\\EventController::index",
                "responses": {
                    "200": {
                        "description": "Get list of courses"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Course"
                ],
                "summary": "Create a new",
                "operationId": "App\\Http\\Controllers\\Api\\EventController::store",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "person_id",
                                    "course_id"
                                ],
                                "properties": {
                                    "person_id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "person-1"
                                    },
                                    "course_id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "course-1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/courses/{course_id}": {
            "get": {
                "tags": [
                    "Course"
                ],
                "summary": "Get person_id of current user by course_id",
                "operationId": "App\\Http\\Controllers\\Api\\EventController::getPersonID",
                "parameters": [
                    {
                        "name": "course_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Course"
                ],
                "summary": "Update person_id of current user by course_id",
                "operationId": "App\\Http\\Controllers\\Api\\EventController::update",
                "parameters": [
                    {
                        "name": "course_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "person_id",
                                    "course_id"
                                ],
                                "properties": {
                                    "person_id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "person-1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Course"
                ],
                "summary": "Delete specified person_id",
                "operationId": "App\\Http\\Controllers\\Api\\EventController::destroy",
                "parameters": [
                    {
                        "name": "course_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted specified event"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get list of users",
                "operationId": "App\\Http\\Controllers\\Api\\UserController::index",
                "responses": {
                    "200": {
                        "description": "Get list of users"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create new User",
                "operationId": "App\\Http\\Controllers\\Api\\UserController::store",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "john"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "smith"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    },
                                    "is_admin": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 0
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/users/{id}": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update a specified User",
                "operationId": "App\\Http\\Controllers\\Api\\UserController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "john"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "smith"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    },
                                    "is_admin": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 0
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete specified user",
                "operationId": "App\\Http\\Controllers\\Api\\UserController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted specified user"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login - get a JWT via given credentials",
                "operationId": "login",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a User",
                "operationId": "register",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "john"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "smith"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "validation errors"
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log the user out (Invalidate the token)",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Log the user out (Invalidate the token)"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/auth/user-profile": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get the authenticated User",
                "operationId": "App\\Http\\Controllers\\AuthController::userProfile",
                "responses": {
                    "200": {
                        "description": "Get the authenticated User"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "API Endpoints for Authentication"
        },
        {
            "name": "User",
            "description": "API Endpoints for User"
        },
        {
            "name": "Credits",
            "description": "API Endpoints for Credits"
        },
        {
            "name": "Course",
            "description": "API Endpoints for Course"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearer": {
                "type": "http",
                "scheme": "bearer",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        []
    ]
}